{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "+ ",
        "  row_names_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Create unique Timepoint factors for each product",
        "+ ",
        "  Timepoint_huel <- factor(row_names_huel, levels = unique(row_names_huel))",
        "+ ",
        "  Timepoint_cornflakes <- factor(row_names_cornflakes, levels = unique(row_names_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(Timepoint_huel, Timepoint_cornflakes),",
        "+ ",
        "    Mean = c(result_huel$mean, result_cornflakes$mean),",
        "+ ",
        "    SD = c(result_huel$sd, result_cornflakes$sd),",
        "+ ",
        "    Product = rep(c(\"HUEL\", \"Cornflakes\"), each = length(Timepoint_huel))",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Mean, color = Product, group = Product)) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1))+",
        "+ ",
        "    ylim(0, 100)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  par(mfrow = c(1, 2))",
        "+ ",
        "  print(plot)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the combined result using kable",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "}",
        "> ",
        "source(file = \"../R/HUEL_satiety_functions.R\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Remove product prefix from row names",
        "+ ",
        "  row_names_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  row_names_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Create unique Timepoint factors for each product",
        "+ ",
        "  Timepoint_huel <- factor(row_names_huel, levels = unique(row_names_huel))",
        "+ ",
        "  Timepoint_cornflakes <- factor(row_names_cornflakes, levels = unique(row_names_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(Timepoint_huel, Timepoint_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Transpose the table",
        "+ ",
        "  result_combined <- t(result_combined)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Value, color = Product, group = Product)) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Value - SD, ymax = Value + SD), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100)  # Set y-axis range from 0 to 100",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "source(file = \"../R/HUEL_satiety_functions.R\")",
        "> ",
        "",
        "> ",
        "source(file = \"../R/HUEL_satiety_functions.R\")",
        "> ",
        "",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "\u001B[1m\u001B[33mError\u001B[39m in `fortify()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `data` must be a \u001B[34m<data.frame>\u001B[38;5;232m, or an object coercible\n  by `fortify()`, not a character matrix.\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mglobal\u001B[22m combine_and_display_results(result_huel_s1, result_cornflakes_s1)\n\u001B[90m 3. \u001B[39mggplot2:::ggplot.default(...)\n\u001B[90m 5. \u001B[39m\u001B[1m\u001B[94mggplot2:::fortify.default(\u001B[39m\u001B[22mdata, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Remove product prefix from row names",
        "+ ",
        "  row_names_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  row_names_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Create unique Timepoint factors for each product",
        "+ ",
        "  Timepoint_huel <- factor(row_names_huel, levels = unique(row_names_huel))",
        "+ ",
        "  Timepoint_cornflakes <- factor(row_names_cornflakes, levels = unique(row_names_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(Timepoint_huel, Timepoint_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Transpose the table",
        "+ ",
        "  result_combined_transposed <- t(result_combined)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined_transposed, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Value, color = Product, group = Product)) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Value - SD, ymax = Value + SD), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100)  # Set y-axis range from 0 to 100",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_errorbar()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Product' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mglobal\u001B[22m combine_and_display_results(result_huel_s1, result_cornflakes_s1)\n\u001B[90m  3. \u001B[39mggplot2:::print.ggplot(plot)\n\u001B[90m  5. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  6. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 13. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 14. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 15. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 16. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 17. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 18. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(patchwork)",
        "> ",
        "library(hrbrthemes)",
        "> ",
        "library(DT)",
        "> ",
        "library(knitr)",
        "> ",
        "library(plotly)",
        "> ",
        "# Read the cleaned Satiety Study",
        "> ",
        "",
        "> ",
        "Satiety <- read_excel(\"../Input/HUEL_satiety_input.xlsx\")",
        "> ",
        "",
        "> ",
        "#load function",
        "> ",
        "source(file = \"../R/HUEL_satiety_functions.R\")",
        "> ",
        "",
        "> ",
        "# Create an interactive table",
        "> ",
        "",
        "> ",
        "datatable(Satiety, filter = \"top\")",
        "> ",
        "",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_errorbar()` at \u001B]8;line = 43:col = 2;file://C:\\Users\\nGT35\\RA\\HUEL\\HUEL_R\\R\\HUEL_satiety_functions.R\u0007../R/HUEL_satiety_functions.R:43:2\u001B]8;;\u0007:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Product' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mglobal\u001B[22m combine_and_display_results(result_huel_s1, result_cornflakes_s1)\n\u001B[90m  3. \u001B[39mggplot2:::print.ggplot(plot)\n\u001B[90m  5. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  6. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 13. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 14. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 15. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 16. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 17. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 18. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Transpose the table",
        "+ ",
        "  result_combined_transposed <- t(result_combined)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined_transposed, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Value, color = Product, group = Product)) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Value - SD, ymax = Value + SD), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100)  # Set y-axis range from 0 to 100",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_errorbar()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Product' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mglobal\u001B[22m combine_and_display_results(result_huel_s1, result_cornflakes_s1)\n\u001B[90m  3. \u001B[39mggplot2:::print.ggplot(plot)\n\u001B[90m  5. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  6. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 13. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 14. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 15. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 16. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 17. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 18. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "calculate_mean_sd <- function(data, intervention, question) {",
        "+ ",
        "  cols <- grep(paste0(intervention, \"_\", question), names(data), value = TRUE)",
        "+ ",
        "  subset_data <- data[, cols]",
        "+ ",
        "  mean_values <- apply(subset_data, 2, mean, na.rm = TRUE)",
        "+ ",
        "  sd_values <- apply(subset_data, 2, sd, na.rm = TRUE)",
        "+ ",
        "  result <- data.frame(mean = mean_values, sd = sd_values)",
        "+ ",
        "  return(result)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Transpose the table",
        "+ ",
        "  result_combined_transposed <- t(result_combined)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Value, color = Product, group = Product)) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Value - SD, ymax = Value + SD), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100)  # Set y-axis range from 0 to 100",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_errorbar()`:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Problem while computing aesthetics.\n\u001B[36mℹ\u001B[38;5;232m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Product' not found\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mglobal\u001B[22m combine_and_display_results(result_huel_s1, result_cornflakes_s1)\n\u001B[90m  3. \u001B[39mggplot2:::print.ggplot(plot)\n\u001B[90m  5. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  6. \u001B[39mggplot2:::by_layer(...)\n\u001B[90m 13. \u001B[39mggplot2 (local) f(l = layers[[i]], d = data[[i]])\n\u001B[90m 14. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 15. \u001B[39mggplot2 (local) compute_aesthetics(..., self = self)\n\u001B[90m 16. \u001B[39mggplot2:::scales_add_defaults(...)\n\u001B[90m 17. \u001B[39m\u001B[1mbase\u001B[22m::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)\n\u001B[90m 18. \u001B[39m\u001B[1mrlang\u001B[22m (local) FUN(X[[i]], ...)\n",
        "> ",
        "print(result_combined)",
        "Error: object 'result_combined' not found\n",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint, y = Mean_HUEL, color = \"HUEL\")) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_HUEL - SD_HUEL, ymax = Mean_HUEL + SD_HUEL), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_line(aes(y = Mean_Cornflakes, color = \"Cornflakes\")) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_Cornflakes - SD_Cornflakes, ymax = Mean_Cornflakes + SD_Cornflakes), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100) +  # Set y-axis range from 0 to 100",
        "+ ",
        "    scale_color_manual(values = c(\"HUEL\" = \"blue\", \"Cornflakes\" = \"red\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint)) +",
        "+ ",
        "    geom_point(aes(y = Mean_HUEL, color = \"HUEL\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_HUEL - SD_HUEL, ymax = Mean_HUEL + SD_HUEL, color = \"HUEL\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(aes(y = Mean_Cornflakes, color = \"Cornflakes\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_Cornflakes - SD_Cornflakes, ymax = Mean_Cornflakes + SD_Cornflakes, color = \"Cornflakes\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100) +  # Set y-axis range from 0 to 100",
        "+ ",
        "    scale_color_manual(values = c(\"HUEL\" = \"blue\", \"Cornflakes\" = \"red\"))",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint)) +",
        "+ ",
        "    geom_point(aes(y = Mean_HUEL, color = \"HUEL\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_HUEL - SD_HUEL, ymax = Mean_HUEL + SD_HUEL, color = \"HUEL\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(aes(y = Mean_Cornflakes, color = \"Cornflakes\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_Cornflakes - SD_Cornflakes, ymax = Mean_Cornflakes + SD_Cornflakes, color = \"Cornflakes\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100) +  # Set y-axis range from 0 to 100",
        "+ ",
        "    scale_color_manual(values = c(\"HUEL\" = \"blue\", \"Cornflakes\" = \"red\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  result_combined$Timepoint <- factor(result_combined$Timepoint, levels = unique(c(\"S1_0\", \"S1_15\", \"S1_30\", \"S1_45\", \"S1_60\", \"S1_90\", \"S1_120\", \"S1_150\", \"S1_180\", \"S1_210\", \"S1_240\")))",
        "+ ",
        "  ",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint)) +",
        "+ ",
        "    geom_point(aes(y = Mean_HUEL, color = \"HUEL\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_HUEL - SD_HUEL, ymax = Mean_HUEL + SD_HUEL, color = \"HUEL\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(aes(y = Mean_Cornflakes, color = \"Cornflakes\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_Cornflakes - SD_Cornflakes, ymax = Mean_Cornflakes + SD_Cornflakes, color = \"Cornflakes\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100) +  # Set y-axis range from 0 to 100",
        "+ ",
        "    scale_color_manual(values = c(\"HUEL\" = \"blue\", \"Cornflakes\" = \"red\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "result_combined",
        "Error: object 'result_combined' not found\n",
        "> ",
        "combine_and_display_results <- function(result_huel, result_cornflakes) {",
        "+ ",
        "  # Extract timepoints from row names",
        "+ ",
        "  timepoints_huel <- gsub(\"^HUEL_\", \"\", row.names(result_huel))",
        "+ ",
        "  timepoints_cornflakes <- gsub(\"^Cornflakes_\", \"\", row.names(result_cornflakes))",
        "+ ",
        "  ",
        "+ ",
        "  # Combine the results into a single data frame",
        "+ ",
        "  result_combined <- data.frame(",
        "+ ",
        "    Timepoint = c(timepoints_huel, timepoints_cornflakes),",
        "+ ",
        "    Mean_HUEL = result_huel$mean,",
        "+ ",
        "    SD_HUEL = result_huel$sd,",
        "+ ",
        "    Mean_Cornflakes = result_cornflakes$mean,",
        "+ ",
        "    SD_Cornflakes = result_cornflakes$sd",
        "+ ",
        "  )",
        "+ ",
        "  ",
        "+ ",
        "  # Round the means and standard deviations to one decimal place",
        "+ ",
        "  result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")] <- ",
        "+ ",
        "    round(result_combined[, c(\"Mean_HUEL\", \"SD_HUEL\", \"Mean_Cornflakes\", \"SD_Cornflakes\")], 1)",
        "+ ",
        "  ",
        "+ ",
        "  result_combined$Timepoint <- factor(result_combined$Timepoint, levels = unique(c(\"S1_0\", \"S1_15\", \"S1_30\", \"S1_45\", \"S1_60\", \"S1_90\", \"S1_120\", \"S1_150\", \"S1_180\", \"S1_210\", \"S1_240\")))",
        "+ ",
        "  ",
        "+ ",
        "  # Remove duplicates and keep only unique timepoints",
        "+ ",
        "  result_combined <- result_combined[!duplicated(result_combined$Timepoint), ]",
        "+ ",
        "  ",
        "+ ",
        "  # Display the table",
        "+ ",
        "  print(kable(result_combined, format = \"markdown\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Create the plot",
        "+ ",
        "  plot <- ggplot(result_combined, aes(x = Timepoint)) +",
        "+ ",
        "    geom_point(aes(y = Mean_HUEL, color = \"HUEL\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_HUEL - SD_HUEL, ymax = Mean_HUEL + SD_HUEL, color = \"HUEL\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    geom_point(aes(y = Mean_Cornflakes, color = \"Cornflakes\"), position = position_dodge(width = 0.5), size = 3) +",
        "+ ",
        "    geom_errorbar(aes(ymin = Mean_Cornflakes - SD_Cornflakes, ymax = Mean_Cornflakes + SD_Cornflakes, color = \"Cornflakes\"), width = 0.2, position = position_dodge(width = 0.5)) +",
        "+ ",
        "    labs(title = \"Mean and Standard Deviation\", x = \"Timepoint\", y = \"Mean\") +",
        "+ ",
        "    theme_minimal() +",
        "+ ",
        "    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +",
        "+ ",
        "    ylim(0, 100) +  # Set y-axis range from 0 to 100",
        "+ ",
        "    scale_color_manual(values = c(\"HUEL\" = \"blue\", \"Cornflakes\" = \"red\"))",
        "+ ",
        "  ",
        "+ ",
        "  # Display the plot",
        "+ ",
        "  print(plot)",
        "+ ",
        "}",
        "> ",
        "# create mean +- SD table for HUEL and Cornflakes S1, 0 to 240 minutes",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "result_huel_s1 <- calculate_mean_sd(Satiety, intervention = \"HUEL\", question = \"S1\")",
        "> ",
        "result_cornflakes_s1 <- calculate_mean_sd(Satiety, intervention = \"Cornflakes\", question = \"S1\")",
        "> ",
        "",
        "> ",
        "combine_and_display_results(result_huel_s1, result_cornflakes_s1)",
        "> ",
        "",
        "> ",
        "View(result_cornflakes_s1)",
        "> ",
        "View(Satiety)",
        "> ",
        "library(readxl)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(patchwork)",
        "> ",
        "library(hrbrthemes)",
        "> ",
        "library(DT)",
        "> ",
        "library(knitr)",
        "> ",
        "library(plotly)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(car)",
        "\nRestarting R session...\n\n"
    ]
}